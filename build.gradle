plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'com.github.spotbugs' version '4.6.0'
    id 'org.owasp.dependencycheck' version '6.2.2'
}

group = 'uk.nhs.prm.deductions'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.10'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.4'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.68'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.12.1'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.json:json:20211205'

    implementation platform('software.amazon.awssdk:bom:2.17.73')
    implementation 'software.amazon.awssdk:ssm'

    // force log4j related jars beyond log4shell vulnerability to ensure no false positives
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-to-slf4j:2.17.0'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-aop'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.31.0'
}

sourceSets {
    integration {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom testRuntimeOnly
}

tasks.withType(Test) {
    useJUnitPlatform()
}

task integration(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    shouldRunAfter test
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    shouldRunAfter integration
}

dependencyCheck {
    failBuildOnCVSS = 7
    suppressionFile = './dependency-checks-suppression.xml'
}

